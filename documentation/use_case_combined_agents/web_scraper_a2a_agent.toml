#################################################################
# Config for A2A Agent, that can embed a MCP agent
#################################################################

#################################################################
# General parameters
#################################################################
agent_a2a_name="Advanced Web Scraper"
agent_a2a_host="127.0.0.1"
agent_a2a_http_port="8130"

# Future use. Websocket is not supported
agent_a2a_ws_port="8131"

#################################################################
# Future use : It would make sense to have a discovery service
# so that planner agent can dynamically discover agents to
# connect to
#################################################################
agent_a2a_discovery_url="http://127.0.0.1:4000"


#################################################################
# Purpose and high level skills
# The agent will use the A2A protocol for his interactions
#################################################################
agent_a2a_system_prompt="You are a highly efficient web scraping agent, capable of navigating websites, extracting structured and unstructured data, and handling various web content types. You can perform deep dives into web pages to retrieve specific information based on user queries."
agent_a2a_skill_id="web_data_extractor"
agent_a2a_skill_name="Web Content Extraction and Analysis"
agent_a2a_skill_description="Navigates web pages, parses HTML/XML content, extracts specified data (e.g., text, links, images, tables), and can handle dynamic content. Integrates with MCP runtime for robust scraping operations."
agent_a2a_version="1.0.0"
agent_a2a_description="An agent specialized in web scraping and data extraction, utilizing an MCP runtime for advanced web navigation and content retrieval."
agent_a2a_doc_url="/docs"
agent_a2a_tags=["web scraping","data extraction","HTML parsing","web automation","information retrieval","data collection","MCP"]
agent_a2a_examples=[
    "Scrape all product names and prices from 'example.com/shop'.",
    "Extract the latest news headlines and their URLs from 'news.example.org'.",
    "Find all email addresses listed on 'contact.example.com'.",
    "Get the text content of the main article on 'blog.example.com/latest-post'.",
    "Monitor stock prices for 'AAPL' on 'finance.example.com'."
]

#################################################################
# Define her the url of openai compatible endpoint
# as well as the model to use
#################################################################
# These set of parameters declares the LLM that the agent will connect to
agent_a2a_model_id="gemini-2.0-flash"
agent_a2a_llm_url="https://generativelanguage.googleapis.com/v1beta/openai/chat/completions"

#################################################################
# You can say the agent to include a MCP runtime agent
# you just define the configuration file to use
# MCP connected to web scraping ( like, for example jina.ai/reader) is mandatory for this agent
#################################################################
agent_a2a_mcp_config_path="documentation/use_case_combined_agents/agent_mcp_scraper_config.toml"
